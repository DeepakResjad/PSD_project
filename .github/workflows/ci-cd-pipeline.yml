name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: ticketing_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.x  # Replace with your desired Python version

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for PostgreSQL
      run: |
        sudo apt-get install -y postgresql-client
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL to be ready..."
          sleep 1
        done

    - name: Run tests
      env:
        DB_HOST: localhost
        DB_NAME: ticketing_db
        DB_USER: postgres
        DB_PASSWORD: password
      run: |
        source venv/bin/activate
        pytest  # Replace this with your test command

    - name: Build and Deploy (Optional)
      if: success()
      run: |
        echo "Deployment steps go here"
        # Add deployment commands (e.g., Docker build and push, SSH deployment, etc.)
