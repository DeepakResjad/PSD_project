name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specifying Python 3.8

      - name: Check Python Version
        run: python --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest  # Explicitly install pytest here

      - name: Check pytest Installation
        run: |
          python -m pip show pytest
          which pytest
          python -m pytest --version  # Confirm pytest is installed correctly

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ticketing_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 11b09postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies for testing
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest  # Ensure pytest is installed in the test job as well

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_USER: postgres
          DB_PASSWORD: 11b09postgres
          DB_NAME: ticketing_db
        run: python -m pytest app_unittest.py  # Use `python -m pytest` to avoid path issues

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Deploy to Server
  #       run: |
  #         echo "Deploying to server..."
  #         # Add deployment scripts here
